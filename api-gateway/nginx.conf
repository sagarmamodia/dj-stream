worker_processes  auto;

events {
    worker_connections 1024;
}

http {

    upstream auth_service {
        server djstream-auth-service:8000;
    }

    upstream channel_service {
        server djstream-channel-service:8001;
    }

    upstream video_service {
        server djstream-video-service:8002;
    }

    upstream interaction_service {
        server djstream-interaction-service:8003;
    }

    upstream notification_service {
        server djstream-notification-service:8004;
    }

    upstream search_service {
      server djstream-search-service:8005;
    }

    server {
        listen 80;

        location = /auth {
           internal;
           
           if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
                add_header 'Content-Length' 0;
                return 204;
          }

          # Global CORS headers for all locations
          add_header 'Access-Control-Allow-Origin' '*' always;

           proxy_pass http://auth_service/auth/authenticate/;
           proxy_pass_request_body off;
           proxy_set_header Host $host;
           proxy_set_header X-Real-IP $remote_addr;
         }
        
        location /auth/ {
         if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
                add_header 'Content-Length' 0;
                return 204;
          }

          # Global CORS headers for all locations
          add_header 'Access-Control-Allow-Origin' '*' always;
          proxy_pass http://auth_service/auth/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }

        location /channel/auth_required/ {
          if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
                add_header 'Content-Length' 0;
                return 204;
          }

          # Global CORS headers for all locations
          add_header 'Access-Control-Allow-Origin' '*' always;
          
          auth_request /auth;
          auth_request_set $user_id $upstream_http_x_user_id;
          auth_request_set $user_name $upstream_http_x_user_name;
          auth_request_set $user_email $upstream_http_x_user_email;
          
          proxy_set_header X-User-ID $user_id;
          proxy_set_header X-User-Name $user_name;
          proxy_set_header X-User-Email $user_email;
          
          proxy_pass http://channel_service/channel/auth_required/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }

        location /channel/ {
          if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
                add_header 'Content-Length' 0;
                return 204;
          }

          # Global CORS headers for all locations
          add_header 'Access-Control-Allow-Origin' '*' always;
          
          proxy_pass http://channel_service/channel/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }
        
        location /video/ {
          if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
                add_header 'Content-Length' 0;
                return 204;
          }

          # Global CORS headers for all locations
          add_header 'Access-Control-Allow-Origin' '*' always;
          
          proxy_pass http://video_service/video/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }

        location /interaction/auth_required/ {
          if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
                add_header 'Content-Length' 0;
                return 204;
          }

          # Global CORS headers for all locations
          add_header 'Access-Control-Allow-Origin' '*' always;
          
          auth_request /auth;
          auth_request_set $user_id $upstream_http_x_user_id;
          auth_request_set $user_name $upstream_http_x_user_name;
          auth_request_set $user_email $upstream_http_x_user_email;

          proxy_set_header X-User-ID $user_id;
          proxy_set_header X-User-Name $user_name;
          proxy_set_header X-User-Email $user_email;

          proxy_pass http://interaction_service/interaction/auth_required/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }

        location /ws/ {
          if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
                add_header 'Content-Length' 0;
                return 204;
          }

          # Global CORS headers for all locations
          add_header 'Access-Control-Allow-Origin' '*' always;

          proxy_pass http://notification_service/ws/; 

          # WebSocket-specific headers
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";

          # Pass necessary headers
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        } 

        location /search {

          if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
                add_header 'Content-Length' 0;
                return 204;
          }

          # Global CORS headers for all locations
          add_header 'Access-Control-Allow-Origin' '*' always;
          
          proxy_pass http://search_service/search;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }
      
        location / {
            return 404;
        }
    }
}