worker_processes  auto;

events {
    worker_connections 1024;
}

http {

    upstream auth_service {
        server host.docker.internal:8000;
    }

    upstream channel_service {
        server host.docker.internal:8001;
    }

    upstream video_service {
        server host.docker.internal:8002;
    }

    upstream interaction_service {
        server host.docker.internal:8003;
    }

    upstream notification_service {
        server host.docker.internal:8004;
    }

    server {
        listen 80;

        location = /auth {
           internal;
           proxy_pass http://auth_service/auth/authenticate/;
           proxy_pass_request_body off;
           proxy_set_header Host $host;
           proxy_set_header X-Real-IP $remote_addr;

         }
        
        location /auth/ {
          proxy_pass http://auth_service/auth/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }

        location /channel/auth_required/ {
          auth_request /auth;
          auth_request_set $user_id $upstream_http_x_user_id;
          auth_request_set $user_name $upstream_http_x_user_name;
          auth_request_set $user_email $upstream_http_x_user_email;
          
          proxy_set_header X-User-ID $user_id;
          proxy_set_header X-User-Name $user_name;
          proxy_set_header X-User-Email $user_email;
          
          proxy_pass http://channel_service/channel/auth_required/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;

        }

        location /channel/ {
          proxy_pass http://channel_service/channel/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }
        
        location /video/ {
          proxy_pass http://video_service/video/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }

        location /interaction/auth_required/ {
          auth_request /auth;
          auth_request_set $user_id $upstream_http_x_user_id;
          auth_request_set $user_name $upstream_http_x_user_name;
          auth_request_set $user_email $upstream_http_x_user_email;

          proxy_set_header X-User-ID $user_id;
          proxy_set_header X-User-Name $user_name;
          proxy_set_header X-User-Email $user_email;

          proxy_pass http://interaction_service/interaction/auth_required/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }

        location /ws/ {
          proxy_pass http://notification_service/ws/; 

          # WebSocket-specific headers
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";

          # Pass necessary headers
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;

        } 
      
        
        location / {
            return 404;
        }
    }

}
